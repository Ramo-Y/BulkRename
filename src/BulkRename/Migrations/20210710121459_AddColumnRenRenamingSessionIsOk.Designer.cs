// <auto-generated />
using System;
using BulkRename.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BulkRename.Migrations
{
    [DbContext(typeof(BulkRenameContext))]
    [Migration("20210710121459_AddColumnRenRenamingSessionIsOk")]
    partial class AddColumnRenRenamingSessionIsOk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.Episode", b =>
                {
                    b.Property<Guid>("EpisodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EpsEpisodeNewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpsEpisodeOriginalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpsNumberString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EpsSeasonID_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EpisodeID");

                    b.HasIndex("EpsSeasonID_FK");

                    b.ToTable("EpisodeItems");
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.RenamingSession", b =>
                {
                    b.Property<Guid>("RenamingSessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RenExecutingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RenRenamingSessionIsOk")
                        .HasColumnType("bit");

                    b.HasKey("RenamingSessionID");

                    b.ToTable("RenamingSessionItems");
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.RenamingSessionToEpisode", b =>
                {
                    b.Property<Guid>("RenamingSessionToEpisodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RseEpisodeID_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RseRenamingSessionID_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RenamingSessionToEpisodeID");

                    b.HasIndex("RseEpisodeID_FK");

                    b.HasIndex("RseRenamingSessionID_FK");

                    b.ToTable("RenamingSessionToEpisodeItems");
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.Season", b =>
                {
                    b.Property<Guid>("SeasonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SsnNumberString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SsnSerieID_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SeasonID");

                    b.HasIndex("SsnSerieID_FK");

                    b.ToTable("SeasonItems");
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.Serie", b =>
                {
                    b.Property<Guid>("SerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SerieID");

                    b.ToTable("SerieItems");
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.Episode", b =>
                {
                    b.HasOne("BulkRename.Shared.Models.Entities.Season", "Season")
                        .WithMany()
                        .HasForeignKey("EpsSeasonID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.RenamingSessionToEpisode", b =>
                {
                    b.HasOne("BulkRename.Shared.Models.Entities.Episode", "Episode")
                        .WithMany()
                        .HasForeignKey("RseEpisodeID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BulkRename.Shared.Models.Entities.RenamingSession", "RenamingSession")
                        .WithMany()
                        .HasForeignKey("RseRenamingSessionID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BulkRename.Shared.Models.Entities.Season", b =>
                {
                    b.HasOne("BulkRename.Shared.Models.Entities.Serie", "Serie")
                        .WithMany()
                        .HasForeignKey("SsnSerieID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
